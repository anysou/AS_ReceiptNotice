<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.anysou.as_receiptnotice">
    <!--
    GPS定位信息 (可伪造，来自Android.Permission.FINE_LOCATION)
　　基站定位   (可伪造，来自Android.Permission.COARSE_LOCATION)
　　系统自带浏览器的历史，书签(Android.Permission.BOOKMARKS)
　　联系人    (android.permission.READ_CONTACTS)
　　通话记录   (android.permission.READ_CONTACTS)
　　系统日志   (android.permission.READ_LOGS)
　　当前账户列表   (android.permission.GET_ACCOUNTS)
　　当前账户的授权码  (android.permission.USE_CREDENTIALS)
　　短信，彩信 (可能与这5个权限有关) android.permission.READ_SMS、android.permission.RECEIVE_SMS
　　　　android.permission.SEND_SMS、android.permission.WRITE_SMS、android.permission.RECEIVE_MMS
　　日历    android.permission.READ_CALENDAR
    -->

    <!--Android各种访问权限Permission详解: https://www.jianshu.com/p/f6f17befbd17 -->
    <!--监听开机权限-->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
    <!-- 网络访问权限
    android9.0以后，为保证用户数据和设备的安全，Google针对下一代 Android 系统(Android P) 的应用程序，将要求默认使用加密连接.
    解决方案，参考 https://www.jianshu.com/p/fd0b0fd0e34c -->
    <uses-permission android:name="android.permission.INTERNET" />
    <!--SD卡读写权限-->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <!--屏幕保持唤醒，一种锁的机制，只要有进程持有这个锁，系统就无法进入休眠状态-->
    <uses-permission android:name="android.permission.WAKE_LOCK"/>
    <!--IMEI(可伪造)\IMSI(可伪造)\SIM卡序列号(可伪造)\手机号码(可伪造)\来，去电号码\SIM卡信息\当前蜂窝网络信息-->
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <!--访问WIFI状态-->
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <!--访问蓝牙权限-->
    <uses-permission android:name="android.permission.BLUETOOTH" />


    <!-- 只允许访问https，不能直接访问http。处理方法在application 加 networkSecurityConfig
         name = MainApplication 首先启动。
         theme = @style/Theme.AppCompat.Light.NoActionBar 主题
         标题文字： 英文 -> res\values\strings.xml  中文 -> res\values-zh\strings.xml
    -->
    <application
        android:name=".MainApplication"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:networkSecurityConfig="@xml/network_security_config"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.AppCompat.Light.NoActionBar">

        <!--注册一个静态广播，并添加权限，实现开机自启动-->
        <receiver android:name=".AutoReceiver" android:enabled="true" android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>

        <!-- 主界面，首界面 android.intent.category.LAUNCHER -->
        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>


        <!-- 注册服务：通知监听服务、根据配置获的唤醒锁、根据配置进行Echo实时通信 -->
        <service android:name=".NotificationCollectorMonitorService" />

        <!-- 注册服务，通知监听服务，获取权限：permission="android.permission.BIND_NOTIFICATION_LISTENER_SERVICE" -->
        <service
            android:name=".NLService"
            android:permission="android.permission.BIND_NOTIFICATION_LISTENER_SERVICE">
            <intent-filter>
                <action android:name="android.service.notification.NotificationListenerService" />
            </intent-filter>
        </service>

        <!-- logcat 好像可以不写此句 -->
        <activity android:name="com.github.pedrovgs.lynx.LynxActivity" />

        <!-- 偏好设置界面 -->
        <activity android:name=".PreferenceActivity" />

        <!-- 解密说明界面 -->
        <activity android:name=".IllustrateDecryptActivity" android:label="@string/illustratedecrypt_title">
            <intent-filter>
                <!--action name 定义一个action组件名称，用于被其他组件调用，与 pref_general.xml 里内容对应一致 -->
                <action android:name="com.anysou.as_receiptnotice.illustratedecryptmethod"/>
                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
        </activity>

        <!--日志记录管理界面-->
        <activity android:name=".FileLogActivity" android:label="@string/filelog_title">
            <intent-filter >
                <!--action name 定义一个action组件名称，用于被其他组件调用，与 pref_general.xml 里内容对应一致 -->
                <action android:name="com.anysou.as_receiptnotice.showfilelog"/>
            </intent-filter>
        </activity>

    </application>

</manifest>



